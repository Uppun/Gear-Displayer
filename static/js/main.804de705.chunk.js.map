{"version":3,"sources":["Dispatcher.js","actions/ActionTypes.js","stores/GearStore.js","actions/GearSetActions.js","Middleware.js","components/GearSlot.js","components/EmptySlot.js","assets/materiaMap.js","assets/materiaIconsMap.js","components/ConnectedGearSlot.js","assets/nameMap.js","components/ModalWindow.js","components/GearModal.js","components/ErrorMessage.js","components/Landing.js","components/NavBar.js","components/GearPage.js","App.js","serviceWorker.js","index.js"],"names":["Dispatcher","statOrdering","modalSlot","state","action","type","ActionTypes","itemBuild","materia","job","icons","item","iconData","parseInt","itemID","stats","category","HQ","statsHQ","statsNQ","mainStatLine","stat","obj","push","ReduceStore","initialize","dispatch","openModal","closeModal","notFound","path","cors_anywhere_url","GearSlot","icon","onClick","slot","iconNumber","iconSection","substr","length","replace","iconUrl","useSpring","boxShadow","transform","props","set","div","className","onMouseEnter","onMouseLeave","style","src","alt","name","en","EmptySlot","emptyString","emptyIcon","materiaMap","Map","materiaIconsMap","ConnectedGearSlot","gearSlot","slottedMateria","useFluxStore","GearStore","prevState","store","getState","map","index","splitMateria","split","materiaNumber","materiaIcon","get","materiaIconLink","key","nameMap","ModalWindow","Object","keys","value","entries","Percent","Max","GearModal","GearSetActions","ErrorMessage","message","TitleMessage","Landing","renderError","missingPage","submissionRef","useRef","onSubmit","e","preventDefault","current","navigate","ref","placeholder","window","location","href","NavBar","id","ariyalaLink","homeLink","onGearSlotClick","GearPage","buildId","request","uri","qs","identifier","err","res","body","statusCode","console","error","log","parsedData","JSON","parse","requestedItems","datasets","content","normal","items","formData","queries","existing","post","url","form","stringify","itemData","materiaData","Middleware","routes","App","routeResult","useRoutes","Boolean","hostname","match","ReactDOM","render","HashRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+vjcAEe,M,OAAIA,YCFJ,EACC,aADD,EAEA,YAFA,EAGC,aAHD,EAID,W,kkBCCd,IAAMC,EAAe,CACjB,OACA,OACA,MACA,MACA,MACA,OACA,OACA,QA6EW,M,YAzEX,aAAe,qEACLD,I,+EAIN,MAAO,CACHE,UAAW,Q,6BAIZC,EAAOC,GACV,OAAOA,EAAOC,MACV,KAAKC,EAAyB,IACnBC,EAA2BH,EAA3BG,UAAWC,EAAgBJ,EAAhBI,QAASC,EAAOL,EAAPK,IACrBC,EAAQ,GAGd,IAAK,IAAMC,KAAQJ,EAAW,CAC1BG,EAAMC,GAAQC,EAASC,SAASN,EAAUI,GAAMG,OAAQ,KACxD,IAAMC,EAAqC,YAA7BR,EAAUI,GAAMK,UAA0BT,EAAUI,GAAMM,GAAKV,EAAUI,GAAMO,QAAUX,EAAUI,GAAMQ,QAEvHZ,EAAUI,GAAMS,aAAe,GAJL,2BAM1B,YAAmBnB,EAAnB,+CAAiC,CAAC,IAAvBoB,EAAsB,QAC7B,GAAIN,EAAMM,GAAO,CACb,IAAMC,EAAM,GACZA,EAAID,GAAQN,EAAMM,GAClBd,EAAUI,GAAMS,aAAaG,KAAKD,UAC3BP,EAAMM,KAXK,kFAe1Bd,EAAUI,GAAMI,MAAQA,EAG5B,OAAO,EAAP,GACOZ,EADP,CAEII,YACAC,UACAC,MACAC,UAIR,KAAKJ,EAGD,OAAO,EAAP,GACOH,EADP,CAEID,UAJgBE,EAAbF,YAQX,KAAKI,EACD,OAAO,EAAP,GACOH,EADP,CAEID,UAAW,OAInB,KAAKI,EACD,MAAO,CACHC,UAAW,iBAInB,QACI,OAAOJ,O,GApECqB,gB,QCbT,GACXC,WADW,SACAlB,EAAWC,EAASC,GAC3BT,EAAW0B,SAAS,CAChBrB,KAAMC,EACNC,YACAC,UACAC,SAIRkB,UAVW,SAUDzB,GACNF,EAAW0B,SAAS,CAChBrB,KAAMC,EACNJ,eAIR0B,WAjBW,WAkBP5B,EAAW0B,SAAS,CAChBrB,KAAMC,KAIduB,SAvBW,WAwBP7B,EAAW0B,SAAS,CAChBrB,KAAMC,M,kBCzBZwB,EAAO,sCACPC,EAAoB,uC,oBC8BXC,EA9BE,SAAC,GAAiC,IAAhCrB,EAA+B,EAA/BA,KAAMsB,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAChCC,EAAa,SAAWH,EAEtBI,GADND,EAAaA,EAAWE,OAAOF,EAAWG,OAAO,IAClBC,QAAQ,SAAU,OAC3CC,EAAO,+BAA2BJ,EAA3B,YAA0CD,EAA1C,QAJiC,EAMzBM,aAAU,iBAAO,CAACC,UAAW,oBAAqBC,UAAW,0BANpC,mBAMvCC,EANuC,KAMhCC,EANgC,KAQ9C,OACI,kBAAC,IAASC,IAAV,CACIC,UAAU,YACVd,QAAS,kBAAMA,EAAQC,IACvBc,aAAc,kBAAMH,EAAI,CAACH,UAAW,oBAAqBC,UAAW,2BACpEM,aAAc,kBAAMJ,EAAI,CAACH,UAAW,oBAAqBC,UAAW,yBACpEO,MAAON,GACP,yBAAKG,UAAU,iBACX,yBACII,IAAKX,EACLY,IAAI,OACJL,UAAU,mBAEd,yBAAKA,UAAU,aACVrC,EAAK2C,KAAKC,OCFhBC,EApBG,SAAC,GAAY,IAAXrB,EAAU,EAAVA,KACVsB,EAAW,gBAAYtB,GACvBuB,EAAqB,SAATvB,EAAA,uFAAoGA,EAApG,QAClB,OACI,yBAAKa,UAAU,mBACX,yBAAKA,UAAU,iBACX,yBACII,IAAKM,EACLL,IAAI,OACJL,UAAU,eAEd,yBAAKA,UAAU,aACVS,M,QCKNE,EArBI,IAAIC,IAAI,CACvB,CAAC,MAAO,YACR,CAAC,MAAO,aACR,CAAC,MAAO,gBACR,CAAC,MAAO,YACR,CAAC,MAAO,QACR,CAAC,MAAO,cACR,CAAC,MAAO,gBACR,CAAC,MAAO,gBACR,CAAC,MAAO,YACR,CAAC,MAAO,eACR,CAAC,MAAO,eACR,CAAC,MAAO,SACR,CAAC,MAAO,0BACR,CAAC,MAAO,wBACR,CAAC,KAAM,sBACP,CAAC,KAAM,oBACP,CAAC,MAAO,oBACR,CAAC,MAAO,wBCIGC,EAtBS,IAAID,IAAI,CAC5B,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,WAC3D,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,WAC3D,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,WAC3D,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,WAC3D,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,WAC3D,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,KAAM,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC9E,CAAC,KAAM,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC9E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAC/E,CAAC,MAAO,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,aCiCpEE,EA1CW,SAAC,GAAqB,IAIxCC,EACAC,EALoB7B,EAAmB,EAAnBA,KAAMD,EAAa,EAAbA,QAAa,EACP+B,YAAaC,GAAW,SAACC,EAAWC,GAAZ,OAAsBA,EAAMC,cAAjF9D,EADoC,EACpCA,UAAWC,EADyB,EACzBA,QAASE,EADgB,EAChBA,MACrBC,EAAOJ,EAAU4B,GAavB,OARKxB,GAIDoD,EAAW,kBAAC,EAAD,CAAUpD,KAAMA,EAAMsB,KAAMvB,EAAMyB,GAAOD,QAASA,EAASC,KAAMA,IAC5E6B,EAAiBxD,EAAQ,GAAD,OAAI2B,EAAJ,YAAYxB,EAAKG,WAJzCiD,EAAqB,cAAT5B,GAAiC,aAATA,EAAuB,kBAAC,EAAD,CAAWA,KAAMA,IAAU4B,EAAW,kBAAC,EAAD,CAAW5B,KAAM,SAClH6B,EAAiB,IAOjB,yBAAKhB,UAAU,uBACX,yBAAKA,UAAU,WACVgB,EAAiBA,EAAeM,KAAI,SAAC9D,EAAS+D,GAC3C,IAAMC,EAAehE,EAAQiE,MAAM,KAC7BC,EAAgB7D,SAAS2D,EAAa,GAAI,IAC1CG,EAAcd,EAAgBe,IAAIJ,EAAa,IAAIE,GACnDG,EAAe,sCAAkCF,EAAlC,QACrB,OACI,yBAAK3B,UAAU,gBAAgB8B,IAAKP,GAC/BZ,EAAWiB,IAAIJ,EAAa,IAAM,KAAOE,EAAgB,GAC1D,yBACItB,IAAKyB,EACLxB,IAAI,OACJL,UAAU,qBAIrB,MAET,yBAAKA,UAAU,uBACVe,KCfFgB,G,cA9BC,IAAInB,IAAI,CACpB,CAAC,MAAO,YACR,CAAC,MAAO,aACR,CAAC,MAAO,YACR,CAAC,MAAO,gBACR,CAAC,MAAO,QACR,CAAC,OAAQ,cACT,CAAC,OAAQ,kBACT,CAAC,MAAO,SACR,CAAC,MAAO,iBACR,CAAC,OAAQ,gBACT,CAAC,OAAQ,mBACT,CAAC,MAAO,gBACR,CAAC,MAAO,iBACR,CAAC,MAAO,cACR,CAAC,MAAO,YACR,CAAC,MAAO,SACR,CAAC,MAAO,eACR,CAAC,MAAO,eACR,CAAC,KAAM,MACP,CAAC,KAAM,MACP,CAAC,MAAO,WACR,CAAC,MAAO,gBACR,CAAC,MAAO,aACR,CAAC,MAAO,cACR,CAAC,MAAO,UACR,CAAC,MAAO,WACR,CAAC,OAAQ,oBC+CEoB,EApEK,SAAC,GAAiC,IAAhCrE,EAA+B,EAA/BA,KAAMH,EAAyB,EAAzBA,QAASyB,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,KAEnCC,EAAa,SAAWH,EAEtBI,GADND,EAAaA,EAAWE,OAAOF,EAAWG,OAAO,IAClBC,QAAQ,SAAU,OAC3CC,EAAO,+BAA2BJ,EAA3B,YAA0CD,EAA1C,QAENrB,EAAuBJ,EAAvBI,MAAOK,EAAgBT,EAAhBS,aAEd,OACI,yBAAK4B,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,uBACX,yBACIA,UAAU,kBACVI,IAAKX,EACLY,IAAI,SAER,yBAAKL,UAAU,mBACVrC,EAAK2C,KAAKC,MAIvB,yBAAKP,UAAU,gBACX,yBAAKA,UAAU,kBACV5B,EAAakD,KAAI,SAACjD,EAAMkD,GACjB,IAAMO,EAAMG,OAAOC,KAAK7D,GAAM,GAC1B8D,EAAQ9D,EAAK4D,OAAOC,KAAK7D,GAAM,IAInC,MAHY,QAARyD,IACIK,GAAc,KAEN,SAARL,GAA0B,SAARA,EAAkB,yBAAK9B,UAAU,aAAf,UAA+B+B,EAAQH,IAAIE,GAA3C,aAAoDK,IAAiB,SAG7H,yBAAKnC,UAAU,SACViC,OAAOG,QAAQrE,GAAOuD,KAAI,WAAeC,GAAW,IAAD,mBAAvBO,EAAuB,KAAlBK,EAAkB,KAChD,MAAiB,SAAThD,EACJ,yBAAKa,UAAU,aAAa8B,IAAKP,GAAjC,UACQQ,EAAQH,IAAIE,GADpB,aAC6BK,IAG7B,yBAAKnC,UAAU,aAAa8B,IAAKP,GAAjC,UACQQ,EAAQH,IAAIE,GADpB,aAC6BK,EAAME,QADnC,mBACqDF,EAAMG,IAD3D,UAKZ,yBAAKtC,UAAU,iBACVxC,EAAUA,EAAQ8D,KAAI,SAAC9D,EAAS+D,GAC7B,IAAMC,EAAehE,EAAQiE,MAAM,KAC7BC,EAAgB7D,SAAS2D,EAAa,GAAI,IAC1CG,EAAcd,EAAgBe,IAAIJ,EAAa,IAAIE,GACnDG,EAAe,sCAAkCF,EAAlC,QACrB,OACI,yBAAK3B,UAAU,gBAAgB8B,IAAKP,GAChC,yBACInB,IAAKyB,EACLxB,IAAI,OACJL,UAAU,iBAEbW,EAAWiB,IAAIJ,EAAa,IAAM,KAAOE,EAAgB,OAE5D,SC1Cfa,EAlBG,WAAO,IAAD,EAC2BtB,YAAaC,GAAW,SAACC,EAAWC,GAAZ,OAAsBA,EAAMC,cAA5F9D,EADa,EACbA,UAAWC,EADE,EACFA,QAASE,EADP,EACOA,MAAOR,EADd,EACcA,UAElC,IAAKA,EACD,OAAO,KAGX,IAAMS,EAAOJ,EAAUL,GAEvB,OACI,yBAAK8C,UAAU,cACX,kBAAC,EAAD,CAAarC,KAAMA,EAAMsB,KAAMvB,EAAMR,GAAYM,QAASA,EAAQ,GAAD,OAAIN,EAAJ,YAAiBS,EAAKG,SAAWqB,KAAMjC,IACxG,yBAAK8C,UAAU,mBAAmBd,QAAS,kBAAMsD,EAAe5D,kBCR7D6D,G,cARM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,yBAAK1C,UAAU,iBACV0C,K,QC+BPC,EAAe,WACjB,OACI,yBAAK3C,UAAU,cAAf,yBAMO4C,EAxCC,SAAC,GAAmB,IAC5BC,EAD2B,EAAjBC,YAERC,EAAgBC,iBAAO,MAc7B,OACI,yBAAKhD,UAAU,gBACX,yBAAKA,UAAU,aACV6C,EAAc,kBAAC,EAAD,CAAcH,QAAQ,4CAA+C,kBAAC,EAAD,OAExF,0BAAMO,SAjBd,SAAsBC,GACdA,EAAEC,iBAEEJ,EAAcK,QAAQjB,OACtBkB,mBAAS,+BAAD,OAAgCN,EAAcK,QAAQjB,UAc9D,2BAAOmB,IAAKP,EAAe1F,KAAK,OAAO2C,UAAU,aAAauD,YAAY,mBAC1E,2BAAOlG,KAAK,SAAS2C,UAAU,gBAAgBmC,MAAM,YAEzD,yBAAKnC,UAAU,aACX,oFAAyD,0BAAMd,QAdvD,WACZsE,OAAOC,SAASC,KAAO,8BAa8D1D,UAAU,aAAlC,WAAzD,uBCCD2D,G,OA5BA,SAAC,GAAU,IAATC,EAAQ,EAARA,GACb,IAAKA,EACD,OAAO,KAGX,IAAMC,EAAW,oCAAgCD,GAC3CE,EAAQ,yBAUd,OACI,yBAAK9D,UAAU,WACX,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,aAAad,QAX3C,SAAyBgE,GACrBG,mBAASS,KAUD,SAEJ,yBAAK9D,UAAU,kBACX,4BAAQA,UAAU,aAAad,QAV3C,SAA4BgE,GACxBM,OAAOC,SAASC,KAAOG,IASf,6BCfVE,EAAkB,SAAC5E,GACrBqD,EAAe7D,UAAUQ,IA6Dd6E,EA1DE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACR1G,EAAa0D,YAAaC,GAAW,SAACC,EAAWC,GAAZ,OAAsBA,EAAMC,cAAjE9D,UAEP,OAAiB,MAAbA,GZZO,SAAwB0G,GACnCC,IAAQtC,IAAI,CAACuC,IAAKpF,EAAoBD,EAAMsF,GAAI,CAACC,WAAYJ,KAAW,SAACK,EAAKC,EAAKC,GAM/E,IALIF,GAA0B,MAAnBC,EAAIE,cACXC,QAAQC,MAAM,SAAUL,GACxBI,QAAQE,IAAI,cAAeL,GAAOA,EAAIE,aAGrCD,EAAL,CAKA,IAAMK,EAAaC,KAAKC,MAAMP,GAExBQ,EAAiBH,EAAWI,SAASJ,EAAWK,SAASC,OAAOC,MAChEA,EAAQ,GAEd,IAAK,IAAMjG,KAAQ6F,EACfI,EAAM7G,KAAKyG,EAAe7F,IAG9B,IAAMkG,EAAW,CACbC,QAAQ,CACJ,CAACF,UAELG,SAAS,IAGbrB,IAAQsB,KAAK,CAACC,IAAK1G,EAAoB,qCAAsC2G,KAAMZ,KAAKa,UAAUN,KAAY,SAACV,EAAOJ,EAAKC,GAKvH,IAJA,IAAMoB,EAAWd,KAAKC,MAAMP,GACtBjH,EAAY,GACZE,EAAMoH,EAAWK,QAEvB,MAAyBjD,OAAOG,QAAQyC,EAAWI,SAASxH,GAAK0H,OAAOC,OAAxE,eAAgF,CAAC,IAAD,0BAApEjG,EAAoE,KAA9DyE,EAA8D,4BAC5E,YAAmBgC,EAAnB,+CAA6B,CAAC,IAAnBjI,EAAkB,QACrBiG,IAAOjG,EAAKG,SACZP,EAAU4B,GAAQxB,IAHkD,mFAOhF,IAAMH,EAAUqH,EAAWI,SAASxH,GAAK0H,OAAOU,YAEhDrD,EAAe/D,WAAWlB,EAAWC,EAASC,WAlC9C+E,EAAe3D,cYKnBiH,CAAW7B,GAEP,yBAAKjE,UAAU,gBAAf,eAMU,kBAAdzC,EAEI,kBAAC,EAAD,CAASuF,aAAa,IAK1B,yBAAK9C,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQ4D,GAAIK,IACZ,yBAAKjE,UAAU,qBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,WAAWD,QAAS6E,IAC5C,kBAAC,EAAD,CAAmB5E,KAAK,UAAUD,QAAS6E,KAE/C,yBAAK/D,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,OAAOD,QAAS6E,IACxC,kBAAC,EAAD,CAAmB5E,KAAK,OAAOD,QAAS6E,KAE5C,yBAAK/D,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,QAAQD,QAAS6E,IACzC,kBAAC,EAAD,CAAmB5E,KAAK,OAAOD,QAAS6E,KAE5C,yBAAK/D,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,QAAQD,QAAS6E,IACzC,kBAAC,EAAD,CAAmB5E,KAAK,QAAQD,QAAS6E,KAE7C,yBAAK/D,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,QAAQD,QAAS6E,IACzC,kBAAC,EAAD,CAAmB5E,KAAK,YAAYD,QAAS6E,KAEjD,yBAAK/D,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,OAAOD,QAAS6E,IACxC,kBAAC,EAAD,CAAmB5E,KAAK,WAAWD,QAAS6E,KAEhD,yBAAK/D,UAAU,YACX,kBAAC,EAAD,CAAmBb,KAAK,OAAOD,QAAS6E,IACxC,kBAAC,EAAD,CAAmB5E,KAAK,OAAOD,QAAS6E,SC3D1DgC,EAAS,CACb,IAAK,kBAAM,kBAAC,EAAD,OACX,mBAAoB,gBAAE9B,EAAF,EAAEA,QAAF,OAAe,kBAAC,EAAD,CAAUA,QAAWA,MAa3C+B,EAVH,WACV,IAAMC,EAAcC,oBAAUH,GAE9B,OACE,yBAAK/F,UAAU,YACZiG,ICJaE,QACW,cAA7B3C,OAAOC,SAAS2C,UAEe,UAA7B5C,OAAOC,SAAS2C,UAEhB5C,OAAOC,SAAS2C,SAASC,MACvB,2D,aCZNC,IAASC,OACL,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,OAELC,SAASC,eAAe,SDuHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.804de705.chunk.js","sourcesContent":["import {Dispatcher} from 'flux';\r\n\r\nexport default new Dispatcher();","export default {\r\n    INITIALIZE: 'INITIALIZE',\r\n    OPENMODAL: 'OPENMODAL',\r\n    CLOSEMODAL: 'CLOSEMODAL',\r\n    NOTFOUND: 'NOTFOUND',\r\n};","import {ReduceStore} from 'flux/utils';\r\nimport Dispatcher from '../Dispatcher';\r\nimport ActionTypes from '../actions/ActionTypes';\r\nimport iconData from '../assets/items.json';\r\n\r\nconst statOrdering = [\r\n    'PDMG',\r\n    'MDMG',\r\n    'WPN',\r\n    'DLY',\r\n    'DEF',\r\n    'MDEF',\r\n    'BLKR',\r\n    'BLKS',\r\n];\r\n\r\nclass GearStore extends ReduceStore {\r\n    constructor() {\r\n        super(Dispatcher);\r\n    }\r\n\r\n    getInitialState() {\r\n        return {\r\n            modalSlot: null,\r\n        };\r\n    }\r\n\r\n    reduce(state, action) {\r\n        switch(action.type) {\r\n            case ActionTypes.INITIALIZE: {\r\n                const {itemBuild, materia, job} = action;\r\n                const icons = {};\r\n\r\n                \r\n                for (const item in itemBuild) {\r\n                    icons[item] = iconData[parseInt(itemBuild[item].itemID, 10)];\r\n                    const stats = itemBuild[item].category === 'crafted' && itemBuild[item].HQ ? itemBuild[item].statsHQ : itemBuild[item].statsNQ;\r\n\r\n                    itemBuild[item].mainStatLine = [];\r\n                \r\n                    for (const stat of statOrdering) {\r\n                        if (stats[stat]) {\r\n                            const obj = {};\r\n                            obj[stat] = stats[stat];\r\n                            itemBuild[item].mainStatLine.push(obj);\r\n                            delete stats[stat];\r\n                        }\r\n                    }\r\n\r\n                    itemBuild[item].stats = stats; \r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    itemBuild,\r\n                    materia,\r\n                    job,\r\n                    icons, \r\n                }\r\n            }\r\n\r\n            case ActionTypes.OPENMODAL: {\r\n                const {modalSlot} = action;\r\n\r\n                return {\r\n                    ...state,\r\n                    modalSlot,\r\n                }\r\n            }\r\n\r\n            case ActionTypes.CLOSEMODAL: {\r\n                return {\r\n                    ...state,\r\n                    modalSlot: null,\r\n                }\r\n            }\r\n\r\n            case ActionTypes.NOTFOUND: {\r\n                return {\r\n                    itemBuild: '404 not found',\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new GearStore();","import ActionTypes from './ActionTypes';\r\nimport Dispatcher from '../Dispatcher';\r\n\r\nexport default {\r\n    initialize(itemBuild, materia, job) {\r\n        Dispatcher.dispatch({\r\n            type: ActionTypes.INITIALIZE,\r\n            itemBuild,\r\n            materia,\r\n            job,\r\n        });\r\n    },\r\n\r\n    openModal(modalSlot) {\r\n        Dispatcher.dispatch({\r\n            type: ActionTypes.OPENMODAL,\r\n            modalSlot,\r\n        });\r\n    },\r\n\r\n    closeModal() {\r\n        Dispatcher.dispatch({\r\n            type: ActionTypes.CLOSEMODAL,\r\n        });\r\n    },\r\n\r\n    notFound() {\r\n        Dispatcher.dispatch({\r\n            type: ActionTypes.NOTFOUND,\r\n        });\r\n    },\r\n}","import GearSetActions from './actions/GearSetActions';\r\nimport request from 'request';\r\n\r\nconst path = 'http://ffxiv.ariyala.com/store.app?';\r\nconst cors_anywhere_url = 'https://cors-anywhere.herokuapp.com/';\r\n\r\nexport default function initializePage(buildId) {\r\n    request.get({uri: cors_anywhere_url + path, qs: {identifier: buildId}}, (err, res, body) => {\r\n        if (err || res.statusCode !== 200) {\r\n            console.error('error:', err); \r\n            console.log('statusCode:', res && res.statusCode); \r\n        }\r\n\r\n        if (!body) {\r\n            GearSetActions.notFound();\r\n            return;\r\n        }\r\n\r\n        const parsedData = JSON.parse(body);\r\n\r\n        const requestedItems = parsedData.datasets[parsedData.content].normal.items;\r\n        const items = [];\r\n\r\n        for (const slot in requestedItems) {\r\n            items.push(requestedItems[slot]);\r\n        }\r\n\r\n        const formData = {\r\n            queries:[\r\n                {items}\r\n            ],\r\n            existing:{}\r\n        };\r\n    \r\n        request.post({url: cors_anywhere_url + 'http://ffxiv.ariyala.com/items.app', form: JSON.stringify(formData)}, (error, res, body) => {\r\n            const itemData = JSON.parse(body);\r\n            const itemBuild = {};\r\n            const job = parsedData.content;\r\n\r\n            for (const [slot, id] of Object.entries(parsedData.datasets[job].normal.items)) {\r\n                for (const item of itemData) {\r\n                    if (id === item.itemID) {\r\n                        itemBuild[slot] = item;\r\n                    }\r\n                }\r\n            }\r\n            const materia = parsedData.datasets[job].normal.materiaData;\r\n\r\n            GearSetActions.initialize(itemBuild, materia, job);\r\n        });\r\n    });\r\n}\r\n\r\n","import React from 'react';\r\nimport '../assets/gearcard.css';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst GearSlot = ({item, icon, onClick, slot}) => {\r\n    let iconNumber = '000000' + icon;\r\n    iconNumber = iconNumber.substr(iconNumber.length-6);\r\n    const iconSection = iconNumber.replace(/\\d{3}$/, '000');\r\n    const iconUrl = `https://xivapi.com/i/${iconSection}/${iconNumber}.png`;\r\n\r\n    const [props, set] = useSpring(() => ({boxShadow: '0px 0px 0px black', transform: 'translate(0px, 0px)'}));\r\n\r\n    return (\r\n        <animated.div \r\n            className='gear-card' \r\n            onClick={() => onClick(slot)}\r\n            onMouseEnter={() => set({boxShadow: '4px 4px 4px black', transform: 'translate(-4px, -4px)'})}\r\n            onMouseLeave={() => set({boxShadow: '0px 0px 0px black', transform: 'translate(0px, 0px)'})}\r\n            style={props}>\r\n            <div className='icon-and-name'>\r\n                <img \r\n                    src={iconUrl}\r\n                    alt='icon'\r\n                    className='gear-card-icon'\r\n                />\r\n                <div className='item-name'>\r\n                    {item.name.en}\r\n                </div>\r\n            </div>\r\n        </animated.div>\r\n    )\r\n\r\n}\r\n\r\nexport default GearSlot;","import React from 'react';\r\nimport '../assets/gearcard.css'\r\n\r\n\r\nconst EmptySlot = ({slot}) => {\r\n    const emptyString = `Empty ${slot}`;\r\n    const emptyIcon = slot === 'food' ? `https://xivapi.com/img-misc/gear/pack.png` : `https://xivapi.com/img-misc/gear/${slot}.png`;\r\n    return (\r\n        <div className='empty-gear-card'>\r\n            <div className='icon-and-name'>\r\n                <img \r\n                    src={emptyIcon}\r\n                    alt='icon'\r\n                    className='empty-icon'\r\n                />\r\n                <div className='item-name'>\r\n                    {emptyString}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EmptySlot;","const materiaMap = new Map([\r\n    ['STR', 'Strength'],\r\n    ['DEX', 'Dexterity'],\r\n    ['INT', 'Intelligence'],\r\n    ['VIT', 'Vitality'], \r\n    ['MND', 'Mind'],\r\n    ['CRT', 'Savage Aim'],\r\n    ['DET', 'Savage Might'],\r\n    ['DHT', 'Heaven\\'s Eye'],\r\n    ['SKS', 'Quickarm'],\r\n    ['SPS', 'Quicktongue'],\r\n    ['TEN', 'Battledance'],\r\n    ['PIE', 'Piety'],\r\n    ['CMS', 'Craftsman\\'s Competence'],\r\n    ['CRL', 'Craftsmans\\'s Command'],\r\n    ['CP', 'Craftman\\'s Cunning'],\r\n    ['GP', 'Gatherer\\'s Grasp'],\r\n    ['GTH', 'Gatherer\\'s Guile'],\r\n    ['PCP', 'Gatherer\\'s Guerdon'],\r\n]);\r\n\r\nexport default materiaMap;","const materiaIconsMap = new Map([\r\n    ['STR', ['020205', '020206', '020207', '020208', '020254', '020263']],\r\n    ['DEX', ['020205', '020206', '020207', '020208', '020254', '020263']],\r\n    ['INT', ['020205', '020206', '020207', '020208', '020254', '020263']],\r\n    ['VIT', ['020205', '020206', '020207', '020208', '020254', '020263']], \r\n    ['MND', ['020205', '020206', '020207', '020208', '020254', '020263']],\r\n    ['CRT', ['020221', '020222', '020223', '020224', '020258', '020267', '020274', '020279']],\r\n    ['DET', ['020221', '020222', '020223', '020224', '020258', '020267', '020274', '020279']],\r\n    ['DHT', ['020221', '020222', '020223', '020224', '020258', '020267', '020274', '020279']],\r\n    ['SKS', ['020225', '020226', '020227', '020228', '020259', '020265', '020275', '020280']],\r\n    ['SPS', ['020225', '020226', '020227', '020228', '020259', '020265', '020275', '020280']],\r\n    ['TEN', ['020213', '020214', '020215', '020216', '020256', '020262', '020273', '020278']],\r\n    ['PIE', ['020213', '020214', '020215', '020216', '020256', '020262', '020273', '020278']],\r\n    ['CMS', ['020201', '020202', '020203', '020204', '020253', '020270', '020271', '020276']],\r\n    ['CRL', ['020201', '020202', '020203', '020204', '020253', '020270', '020271', '020276']],\r\n    ['CP', ['020201', '020202', '020203', '020204', '020253', '020270', '020271', '020276']],\r\n    ['GP', ['020209', '020210', '020211', '020212', '020255', '020266', '020272', '020277']],\r\n    ['GTH', ['020209', '020210', '020211', '020212', '020255', '020266', '020272', '020277']],\r\n    ['PCP', ['020209', '020210', '020211', '020212', '020255', '020266', '020272', '020277']],\r\n]);\r\n\r\n\r\nexport default materiaIconsMap;","import React from 'react';\r\nimport GearStore from '../stores/GearStore';\r\nimport GearSlot from './GearSlot';\r\nimport EmptySlot from './EmptySlot';\r\nimport useFluxStore from 'flux-hooks';\r\nimport '../assets/gearcard.css'\r\nimport materiaMap from '../assets/materiaMap';\r\nimport materiaIconsMap from '../assets/materiaIconsMap';\r\n\r\nconst ConnectedGearSlot = ({slot, onClick}) => {\r\n    const {itemBuild, materia, icons} = useFluxStore(GearStore, (prevState, store) => store.getState());\r\n    const item = itemBuild[slot];\r\n\r\n    let gearSlot;\r\n    let slottedMateria;\r\n\r\n    if (!item) {\r\n        gearSlot = (slot !== 'ringRight' && slot !== 'ringLeft') ? <EmptySlot slot={slot}/> : gearSlot = <EmptySlot slot={'ring'}/>;\r\n        slottedMateria = [];    \r\n    } else {\r\n        gearSlot = <GearSlot item={item} icon={icons[slot]} onClick={onClick} slot={slot} />;\r\n        slottedMateria = materia[`${slot}-${item.itemID}`]; ;\r\n    }\r\n    \r\n    return (\r\n        <div className='connected-gear-slot'>\r\n            <div className='materia'>\r\n                {slottedMateria ? slottedMateria.map((materia, index) => {\r\n                    const splitMateria = materia.split(':');\r\n                    const materiaNumber = parseInt(splitMateria[1], 10);\r\n                    const materiaIcon = materiaIconsMap.get(splitMateria[0])[materiaNumber];\r\n                    const materiaIconLink = `https://xivapi.com/i/020000/${materiaIcon}.png`\r\n                    return (\r\n                        <div className='materia-entry' key={index}>\r\n                            {materiaMap.get(splitMateria[0]) + ' ' + (materiaNumber + 1)}\r\n                            <img \r\n                                src={materiaIconLink}\r\n                                alt='icon'\r\n                                className='materia-icon'\r\n                            />\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n            </div>\r\n            <div className='gear-slot-container'>\r\n                {gearSlot}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectedGearSlot;\r\n","const nameMap = new Map([\r\n    ['STR', 'Strength'],\r\n    ['DEX', 'Dexterity'],\r\n    ['VIT', 'Vitality'],\r\n    ['INT', 'Intelligence'],\r\n    ['MND', 'Mind'],\r\n    ['BLKR', 'Block Rate'],\r\n    ['BLKS', 'Block Strength'],\r\n    ['DLY', 'Delay'],\r\n    ['WPN', 'Weapon Damage'],\r\n    ['MDMG', 'Magic Damage'],\r\n    ['PDMG', 'Physical Damage'],\r\n    ['CRT', 'Critical Hit'],\r\n    ['DET', 'Determination'],\r\n    ['DHT', 'Direct Hit'],\r\n    ['TEN', 'Tenacity'],\r\n    ['PIE', 'Piety'],\r\n    ['SKS', 'Skill Speed'],\r\n    ['SPS', 'Spell Speed'],\r\n    ['CP', 'CP'],\r\n    ['GP', 'GP'],\r\n    ['CRL', 'Control'],\r\n    ['CMS', 'Craftmanship'],\r\n    ['GTH', 'Gathering'],\r\n    ['PCP', 'Perception'],\r\n    ['MOR', 'Morale'],\r\n    ['DEF', 'Defense'],\r\n    ['MDEF', 'Magic Defense'],\r\n]);\r\n\r\nexport default nameMap;","import React from 'react';\r\nimport '../assets/modal.css';\r\nimport materiaMap from '../assets/materiaMap';\r\nimport nameMap from '../assets/nameMap';\r\nimport materiaIconsMap from '../assets/materiaIconsMap';\r\n\r\nconst ModalWindow = ({item, materia, icon, slot}) => {\r\n\r\n    let iconNumber = '000000' + icon;\r\n    iconNumber = iconNumber.substr(iconNumber.length-6);\r\n    const iconSection = iconNumber.replace(/\\d{3}$/, '000');\r\n    const iconUrl = `https://xivapi.com/i/${iconSection}/${iconNumber}.png`;\r\n\r\n    const {stats, mainStatLine} = item;\r\n\r\n    return (\r\n        <div className='modal-window'>\r\n            <div className='modal-top'>\r\n                <div className='modal-icon-and-name'>\r\n                    <img\r\n                        className='modal-gear-icon'\r\n                        src={iconUrl}\r\n                        alt='icon' \r\n                    />\r\n                    <div className='modal-item-name'>\r\n                        {item.name.en}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='modal-bottom'>\r\n                <div className='main-stat-line'>\r\n                    {mainStatLine.map((stat, index) => {\r\n                            const key = Object.keys(stat)[0];\r\n                            let value = stat[Object.keys(stat)[0]];\r\n                            if (key === 'DLY') {\r\n                                    value = value/1000\r\n                            }\r\n                            return (key !== 'PDMG' && key !== 'MDMG') ? <div className='main-stat'>{`${nameMap.get(key)}: ${value}`}</div> : null;    \r\n                    })}\r\n                </div>\r\n                <div className='stats'>\r\n                    {Object.entries(stats).map(([key, value], index) => {\r\n                        return (slot !== 'food' ?\r\n                            <div className='stat-entry' key={index}>\r\n                                {`${nameMap.get(key)}: ${value}`}\r\n                            </div>\r\n                            :\r\n                            <div className='stat-entry' key={index}>\r\n                                {`${nameMap.get(key)} +${value.Percent}% (Max: ${value.Max})`}\r\n                            </div>\r\n                    )})}\r\n                </div>\r\n                <div className='modal-materia'>\r\n                    {materia ? materia.map((materia, index) => {\r\n                        const splitMateria = materia.split(':');\r\n                        const materiaNumber = parseInt(splitMateria[1], 10);\r\n                        const materiaIcon = materiaIconsMap.get(splitMateria[0])[materiaNumber];\r\n                        const materiaIconLink = `https://xivapi.com/i/020000/${materiaIcon}.png`\r\n                        return (\r\n                            <div className='materia-entry' key={index}>\r\n                                <img \r\n                                    src={materiaIconLink}\r\n                                    alt='icon'\r\n                                    className='materia-icon'\r\n                                />\r\n                                {materiaMap.get(splitMateria[0]) + ' ' + (materiaNumber + 1)}\r\n                            </div>\r\n                        )}) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport GearStore from '../stores/GearStore';\r\nimport useFluxStore from 'flux-hooks';\r\nimport ModalWindow from './ModalWindow';\r\nimport '../assets/modal.css'\r\nimport GearSetActions from '../actions/GearSetActions';\r\n\r\nconst GearModal = () => {\r\n    const {itemBuild, materia, icons, modalSlot} = useFluxStore(GearStore, (prevState, store) => store.getState());\r\n\r\n    if (!modalSlot) {\r\n        return null;\r\n    }\r\n\r\n    const item = itemBuild[modalSlot];\r\n\r\n    return (\r\n        <div className='gear-modal'>\r\n            <ModalWindow item={item} icon={icons[modalSlot]} materia={materia[`${modalSlot}-${item.itemID}`]} slot={modalSlot} />\r\n            <div className='modal-background' onClick={() => GearSetActions.closeModal()}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GearModal;","import React from 'react';\r\nimport '../assets/error.css';\r\n\r\nconst ErrorMessage = ({message}) => {\r\n    return (\r\n        <div className='error-message'>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","import React, { useRef } from 'react';\r\nimport '../assets/landing.css';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport {navigate} from 'hookrouter';\r\n\r\nconst Landing = ({missingPage}) => {\r\n    let renderError = missingPage;\r\n    const submissionRef = useRef(null);\r\n\r\n    function handleSubmit(e) {\r\n            e.preventDefault();\r\n            \r\n            if (submissionRef.current.value) {\r\n                navigate(`http://localhost:3000/build/${submissionRef.current.value}`);\r\n            }\r\n        };\r\n\r\n        const onPress = () => {\r\n            window.location.href = 'https://ffxiv.ariyala.com/'; \r\n        }\r\n\r\n    return (\r\n        <div className='landing-page'>\r\n            <div className='error-box'>\r\n                {renderError ? <ErrorMessage message='Build not found. Please try another ID.' /> : <TitleMessage />}\r\n            </div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input ref={submissionRef} type='text' className='submit-box' placeholder='Enter build ID' />\r\n                <input type='submit' className='submit-button' value='Search' />\r\n            </form>\r\n            <div className='help-text'>\r\n                <text>To search for a build, enter the gearset code from <text onClick={onPress} className='link-text'>Ariyala</text>. Example: 17L25</text>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TitleMessage = () => {\r\n    return (\r\n        <div className='page-title'>\r\n            FFXIV Gearset Viewer\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport {navigate} from 'hookrouter';\r\nimport '../assets/navbar.css'\r\n\r\nconst NavBar = ({id}) => {\r\n    if (!id) {\r\n        return null;\r\n    }\r\n\r\n    const ariyalaLink = `https://ffxiv.ariyala.com/${id}`;\r\n    const homeLink = `http://localhost:3000/`;\r\n\r\n    function handleHomeClick(e) {\r\n        navigate(homeLink);\r\n    }\r\n\r\n    function handleAriyalaClick(e) {\r\n        window.location.href = ariyalaLink;\r\n    }\r\n\r\n    return (\r\n        <div className='top-bar'>\r\n            <div className='home-button-content'>\r\n                <button className='nav-button' onClick={handleHomeClick}>Home</button>\r\n            </div>\r\n            <div className='ariyala-button'>\r\n                <button className='nav-button' onClick={handleAriyalaClick}>View Build on Ariyala</button>\r\n            </div>\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport GearStore from '../stores/GearStore';\r\nimport Middleware from '../Middleware';\r\nimport ConnectedGearSlot from './ConnectedGearSlot';\r\nimport '../assets/gearpage.css'\r\nimport useFluxStore from 'flux-hooks';\r\nimport GearModal from './GearModal';\r\nimport Landing from './Landing';\r\nimport GearSetActions from '../actions/GearSetActions';\r\nimport NavBar from './NavBar';\r\n\r\nconst onGearSlotClick = (slot) => {\r\n    GearSetActions.openModal(slot);\r\n}\r\n\r\nconst GearPage = ({buildId}) => {\r\n    const {itemBuild} = useFluxStore(GearStore, (prevState, store) => store.getState());\r\n\r\n    if (itemBuild == null) {\r\n        Middleware(buildId); \r\n        return(\r\n            <div className='loading-page'>\r\n                Loading...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (itemBuild === '404 not found') {\r\n        return (\r\n            <Landing missingPage={true} />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className='gear-page'>\r\n            <GearModal />\r\n            <NavBar id={buildId} />\r\n            <div className='gear-page-content'>\r\n                <div className='gear-container'>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='mainhand' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='offhand' onClick={onGearSlotClick} />\r\n                    </div>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='head' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='ears' onClick={onGearSlotClick} />\r\n                    </div>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='hands' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='neck' onClick={onGearSlotClick} />\r\n                    </div>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='chest' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='wrist' onClick={onGearSlotClick} />\r\n                    </div>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='waist' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='ringRight' onClick={onGearSlotClick} />\r\n                    </div>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='legs' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='ringLeft' onClick={onGearSlotClick} />\r\n                    </div>\r\n                    <div className='gear-row'>\r\n                        <ConnectedGearSlot slot='feet' onClick={onGearSlotClick} />\r\n                        <ConnectedGearSlot slot='food' onClick={onGearSlotClick} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GearPage;","import React from 'react';\nimport './assets/App.css';\nimport GearPage from './components/GearPage';\nimport Landing from './components/Landing';\nimport {useRoutes} from 'hookrouter';\n\nconst routes = {\n  '/': () => <Landing />,\n  '/build/:buildId*': ({buildId}) => <GearPage buildId = {buildId} />   \n};\n\nconst App = () => {\n  const routeResult = useRoutes(routes);\n\n  return (\n    <div className='gear-app'>\n      {routeResult}\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render((\n    <HashRouter>\n        <App />\n    </HashRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}